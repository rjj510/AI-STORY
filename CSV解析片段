以下是abc.csv文件片段,
'''
ID,ITEM,ATTRIBUTE,UNIT,LESSON
0,baby,word,1,1
1,fly,word,1,1
2,elephant,word,1,1
3,mum,word,1,1
4,photo,word,1,1
5,fantastic,word,1,1
6,"trails in Africa; look ,Trek, A photo and a DVD; Hi , trek! look ! Africa; look ! An elephant ! Oh yes ! A baby ; oh no ! A fly . look a baby and mum , wow.",text,1,1
7,house,word,,
8,igloo,word,,
9,brother,word,,
10,sister,word,,
11,dad,word,,
12,"Look, Mum! A baby and a fly in this photo!",text,1,1
119,an ant ,grammar,1,1
120,a fly ,grammar,1,1
121,"and -> a e i o u ",grammar,1,1
122,"a-> bus c d e f g h j k l m n p q r s t v w x y z ",grammar,1,1
'''

模拟python执行以下代码，并输出结果
<OPEN code environment>
	def process_text(text_list, word_set):
 		for _, row in text_list.iterrows():
			# 使用正则表达式分割文本
      text_words = set(re.split(r'[ ,;!\t\n]+', row['ITEM'].lower()))
      # 移除空字符串
      text_words.discard('')
      # 将不在word_set中的单词添加到word_set
      word_set.update(text_words)
        
	<word_list    = [SELECT ITEM FROM abc.csv WHERE  UNIT=1, LESSON=1, and ATTRIBUTE="word"]>
	<text_example = SELECT ID,ITEM FROM abc.csv WHERE  UNIT=1, LESSON=1, and ATTRIBUTE="text">
	<grammar_list = SELECT ID,ITEM FROM abc.csv WHERE  UNIT=1, LESSON=1, and ATTRIBUTE="grammar">

	[FOR text_example_words IN text_example]
	  <text_words = using regular expressions "r'[ ,;!\t\n]+",Split text_example_words[ITEM] each text string into a list of words>
		[IF word NOT IN  text_words]
				<Append the word to the word_list>
	[FOR grammar_list_words IN grammar_list]
	  <text_words = using regular expressions "r'[ ,;!\t\n]+", Split grammar_list_words[ITEM] each text string into a list of words>
		[IF word NOT IN  text_words]
				<Append the word to the word_list>

  <output word_list.count()>
	<output word_list>
			
<CLOSE code environment>


以下是abc.csv文件片段,
'''
ID,ITEM,ATTRIBUTE,UNIT,LESSON
0,baby,word,1,1
1,fly,word,1,1
2,elephant,word,1,1
3,mum,word,1,1
4,photo,word,1,1
5,fantastic,word,1,1
6,"trails in Africa; look ,Trek, A photo and a DVD; Hi , trek! look ! Africa; look ! An elephant ! Oh yes ! A baby ; oh no ! A fly . look a baby and mum , wow.",text,1,1
7,house,word,,
8,igloo,word,,
9,brother,word,,
10,sister,word,,
11,dad,word,,
12,"Look, Mum! A baby and a fly in this photo!",text,1,1
119,an ant ,grammar,1,1
120,a fly ,grammar,1,1
121,"and -> a e i o u ",grammar,1,1
122,"a-> bus c d e f g h j k l m n p q r s t v w x y z ",grammar,1,1
'''

模拟python执行以下代码，并输出结果
<OPEN code environment>

	def process_text(text_list, word_set):
 		[FOR row IN text_list.iterrows()]
				# 使用正则表达式分割文本
		  	<text_words = set(split(r'\W+', row['ITEM'].lower()))> 
    		# 移除空字符串
    		<text_words.discard('')>
    		# 将不在word_set中的单词添加到word_set
      	<word_set.update(text_words)>
        
	<word_list    = [SELECT ITEM FROM abc.csv WHERE  UNIT=1, LESSON=1, and ATTRIBUTE="word"]>
	<word_set     = Convert the data type of word_list to a set and make it all lowercase># 转换为集合并统一为小写	
	<text_example = SELECT ID,ITEM FROM abc.csv WHERE  UNIT==1, LESSON==1, and ATTRIBUTE=="text">
	<grammar_list = SELECT ID,ITEM FROM abc.csv WHERE  UNIT==1, LESSON==1, and ATTRIBUTE=="grammar">

	<process_text(text_example, word_set)>
	<process_text(grammar_list, word_set)>

  <word_list = Remove duplicates and sort word_set>
  
  <output word_list count>
	<output word_list>
			
<CLOSE code environment>


